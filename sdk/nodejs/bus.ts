// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import splight:index/bus:Bus [options] splight_bus.<name> <bus_id>
 * ```
 */
export class Bus extends pulumi.CustomResource {
    /**
     * Get an existing Bus resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BusState, opts?: pulumi.CustomResourceOptions): Bus {
        return new Bus(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'splight:index/bus:Bus';

    /**
     * Returns true if the given object is an instance of Bus.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bus {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bus.__pulumiType;
    }

    /**
     * attribute of the resource
     */
    public /*out*/ readonly activePowers!: pulumi.Output<outputs.BusActivePower[]>;
    /**
     * description of the resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * geo position and shape of the resource
     */
    public readonly geometry!: pulumi.Output<string | undefined>;
    /**
     * kind of the resource
     */
    public /*out*/ readonly kinds!: pulumi.Output<outputs.BusKind[]>;
    /**
     * name of the resource
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * attribute of the resource
     */
    public readonly nominalVoltageKv!: pulumi.Output<outputs.BusNominalVoltageKv>;
    /**
     * attribute of the resource
     */
    public /*out*/ readonly reactivePowers!: pulumi.Output<outputs.BusReactivePower[]>;
    /**
     * tags of the resource
     */
    public readonly tags!: pulumi.Output<outputs.BusTag[] | undefined>;
    /**
     * timezone that overrides location-based timezone of the resource
     */
    public readonly timezone!: pulumi.Output<string>;

    /**
     * Create a Bus resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BusArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BusArgs | BusState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BusState | undefined;
            resourceInputs["activePowers"] = state ? state.activePowers : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["geometry"] = state ? state.geometry : undefined;
            resourceInputs["kinds"] = state ? state.kinds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nominalVoltageKv"] = state ? state.nominalVoltageKv : undefined;
            resourceInputs["reactivePowers"] = state ? state.reactivePowers : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as BusArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["geometry"] = args ? args.geometry : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nominalVoltageKv"] = args ? args.nominalVoltageKv : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["activePowers"] = undefined /*out*/;
            resourceInputs["kinds"] = undefined /*out*/;
            resourceInputs["reactivePowers"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bus.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Bus resources.
 */
export interface BusState {
    /**
     * attribute of the resource
     */
    activePowers?: pulumi.Input<pulumi.Input<inputs.BusActivePower>[]>;
    /**
     * description of the resource
     */
    description?: pulumi.Input<string>;
    /**
     * geo position and shape of the resource
     */
    geometry?: pulumi.Input<string>;
    /**
     * kind of the resource
     */
    kinds?: pulumi.Input<pulumi.Input<inputs.BusKind>[]>;
    /**
     * name of the resource
     */
    name?: pulumi.Input<string>;
    /**
     * attribute of the resource
     */
    nominalVoltageKv?: pulumi.Input<inputs.BusNominalVoltageKv>;
    /**
     * attribute of the resource
     */
    reactivePowers?: pulumi.Input<pulumi.Input<inputs.BusReactivePower>[]>;
    /**
     * tags of the resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.BusTag>[]>;
    /**
     * timezone that overrides location-based timezone of the resource
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Bus resource.
 */
export interface BusArgs {
    /**
     * description of the resource
     */
    description?: pulumi.Input<string>;
    /**
     * geo position and shape of the resource
     */
    geometry?: pulumi.Input<string>;
    /**
     * name of the resource
     */
    name?: pulumi.Input<string>;
    /**
     * attribute of the resource
     */
    nominalVoltageKv?: pulumi.Input<inputs.BusNominalVoltageKv>;
    /**
     * tags of the resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.BusTag>[]>;
    /**
     * timezone that overrides location-based timezone of the resource
     */
    timezone?: pulumi.Input<string>;
}
