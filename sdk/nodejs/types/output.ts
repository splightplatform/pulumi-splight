// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ActionAsset {
    /**
     * asset id
     */
    id: string;
    /**
     * asset name
     */
    name: string;
}

export interface ActionSetpoint {
    /**
     * the target attribute of the setpoint which should also be an attribute of the specified asset
     */
    attribute: outputs.ActionSetpointAttribute;
    /**
     * setpoint Id
     */
    id: string;
    /**
     * setpoint name
     */
    name: string;
    /**
     * JSON encoded scalar value
     */
    value: string;
}

export interface ActionSetpointAttribute {
    /**
     * attribute id
     */
    id: string;
    /**
     * attribute name
     */
    name: string;
}

export interface AlertAlertItem {
    /**
     * how the expression is shown (i.e 'A * 2')
     */
    expression: string;
    /**
     * actual mongo query containing the expression
     */
    expressionPlain: string;
    /**
     * Id of the function item
     */
    id: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.AlertAlertItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.AlertAlertItemQueryFilterAttribute;
    /**
     * function used to aggregate data
     */
    queryGroupFunction: string;
    /**
     * time window to apply the aggregation
     */
    queryGroupUnit: string;
    /**
     * actual mongo query
     */
    queryPlain: string;
    /**
     * identifier of the variable (i.e 'A')
     */
    refId: string;
    /**
     * either QUERY or EXPRESSION
     */
    type: string;
}

export interface AlertAlertItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface AlertAlertItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface AlertRelatedAsset {
    /**
     * asset id
     */
    id: string;
    /**
     * asset name
     */
    name: string;
}

export interface AlertTag {
    /**
     * tag id
     */
    id: string;
    /**
     * tag name
     */
    name: string;
}

export interface AlertThreshold {
    /**
     * [alert|warning|no_alert] status value for the threshold
     */
    status: string;
    /**
     * optional custom value to be displayed in the platform.
     */
    statusText?: string;
    /**
     * value to be considered to compare
     */
    value: number;
}

export interface AssetKind {
    /**
     * kind id
     */
    id: string;
    /**
     * kind name
     */
    name: string;
}

export interface AssetRelationAsset {
    /**
     * asset id
     */
    id: string;
    /**
     * asset name
     */
    name: string;
}

export interface AssetRelationRelatedAsset {
    /**
     * asset id
     */
    id: string;
    /**
     * asset name
     */
    name: string;
}

export interface AssetRelationRelatedAssetKind {
    /**
     * kind id
     */
    id: string;
    /**
     * kind name
     */
    name: string;
}

export interface AssetTag {
    /**
     * tag id
     */
    id: string;
    /**
     * tag name
     */
    name: string;
}

export interface CommandAction {
    /**
     * asset associated with the action (to be deprecated)
     */
    asset: outputs.CommandActionAsset;
    /**
     * action Id
     */
    id: string;
    /**
     * setpoint name
     */
    name: string;
}

export interface CommandActionAsset {
    /**
     * asset id
     */
    id: string;
    /**
     * asset name
     */
    name: string;
}

export interface ComponentInput {
    description?: string;
    multiple?: boolean;
    name: string;
    required?: boolean;
    sensitive?: boolean;
    type: string;
    value?: string;
}

export interface ComponentRoutineConfig {
    description?: string;
    multiple?: boolean;
    name: string;
    required?: boolean;
    sensitive?: boolean;
    type: string;
    value?: string;
}

export interface ComponentRoutineInput {
    description?: string;
    multiple?: boolean;
    name: string;
    required?: boolean;
    type?: string;
    valueType: string;
    values?: outputs.ComponentRoutineInputValue[];
}

export interface ComponentRoutineInputValue {
    asset: string;
    attribute: string;
}

export interface ComponentRoutineOutput {
    description?: string;
    multiple?: boolean;
    name: string;
    required?: boolean;
    type?: string;
    valueType: string;
    values?: outputs.ComponentRoutineOutputValue[];
}

export interface ComponentRoutineOutputValue {
    asset: string;
    attribute: string;
}

export interface ComponentTag {
    /**
     * tag id
     */
    id: string;
    /**
     * tag name
     */
    name: string;
}

export interface DashboardActionlistChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardActionlistChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardActionlistChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardActionlistChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardActionlistChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardActionlistChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardActionlistChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardAlerteventsChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardAlerteventsChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardAlerteventsChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardAlerteventsChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardAlerteventsChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardAlerteventsChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardAlerteventsChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardAlertlistChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardAlertlistChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardAlertlistChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardAlertlistChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardAlertlistChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardAlertlistChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardAlertlistChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardAssetlistChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardAssetlistChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardAssetlistChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardAssetlistChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardAssetlistChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardAssetlistChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardAssetlistChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardBarChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardBarChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardBarChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardBarChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardBarChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardBarChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardBarChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardBargaugeChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardBargaugeChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardBargaugeChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardBargaugeChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardBargaugeChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardBargaugeChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardBargaugeChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardCommandlistChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardCommandlistChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardCommandlistChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardCommandlistChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardCommandlistChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardCommandlistChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardCommandlistChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardGaugeChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardGaugeChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardGaugeChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardGaugeChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardGaugeChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardGaugeChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardGaugeChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardHistogramChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardHistogramChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardHistogramChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardHistogramChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardHistogramChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardHistogramChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardHistogramChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardImageChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardImageChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardImageChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardImageChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardImageChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardImageChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardImageChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardRelatedAsset {
    /**
     * asset id
     */
    id: string;
    /**
     * asset name
     */
    name: string;
}

export interface DashboardStatChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardStatChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardStatChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardStatChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardStatChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardStatChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardStatChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardTableChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardTableChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardTableChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardTableChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardTableChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardTableChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardTableChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardTag {
    /**
     * tag id
     */
    id: string;
    /**
     * tag name
     */
    name: string;
}

export interface DashboardTextChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardTextChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardTextChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardTextChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardTextChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardTextChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardTextChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface DashboardTimeseriesChartChartItem {
    color: string;
    expressionPlain: string;
    hidden?: boolean;
    label?: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.DashboardTimeseriesChartChartItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.DashboardTimeseriesChartChartItemQueryFilterAttribute;
    queryGroupFunction?: string;
    queryGroupUnit?: string;
    queryLimit?: number;
    queryPlain: string;
    querySortDirection?: number;
    refId: string;
    type: string;
}

export interface DashboardTimeseriesChartChartItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardTimeseriesChartChartItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface DashboardTimeseriesChartThreshold {
    color: string;
    displayText: string;
    value: number;
}

export interface DashboardTimeseriesChartValueMapping {
    displayText: string;
    matchValue: string;
    order: number;
    type: string;
}

export interface FileRelatedAsset {
    /**
     * asset id
     */
    id: string;
    /**
     * asset name
     */
    name: string;
}

export interface FileTag {
    /**
     * tag id
     */
    id: string;
    /**
     * tag name
     */
    name: string;
}

export interface FunctionFunctionItem {
    /**
     * how the expression is shown (i.e 'A * 2')
     */
    expression: string;
    /**
     * actual mongo query containing the expression
     */
    expressionPlain: string;
    /**
     * Id of the function item
     */
    id: string;
    /**
     * Asset filter
     */
    queryFilterAsset: outputs.FunctionFunctionItemQueryFilterAsset;
    /**
     * Attribute filter
     */
    queryFilterAttribute: outputs.FunctionFunctionItemQueryFilterAttribute;
    /**
     * function used to aggregate data
     */
    queryGroupFunction: string;
    /**
     * time window to apply the aggregation
     */
    queryGroupUnit: string;
    /**
     * actual mongo query
     */
    queryPlain: string;
    /**
     * identifier of the variable (i.e 'A')
     */
    refId: string;
    /**
     * either QUERY or EXPRESSION
     */
    type: string;
}

export interface FunctionFunctionItemQueryFilterAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface FunctionFunctionItemQueryFilterAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
    /**
     * type of the resource
     */
    type?: string;
}

export interface FunctionTag {
    /**
     * tag id
     */
    id: string;
    /**
     * tag name
     */
    name: string;
}

export interface FunctionTargetAsset {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
}

export interface FunctionTargetAttribute {
    /**
     * Id of the resource
     */
    id?: string;
    /**
     * name of the resource
     */
    name?: string;
    /**
     * type of the resource
     */
    type?: string;
}

export interface GetAssetKindsKind {
    /**
     * Id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
}

export interface GetTagsTag {
    /**
     * Id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
}

export interface LineAbsorptivity {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineActivePower {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineActivePowerEnd {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineAmpacity {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineAtmosphere {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineCapacitance {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineConductance {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineCurrent {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineCurrentR {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineCurrentT {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineDiameter {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineEmissivity {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineEnergy {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineKind {
    /**
     * kind id
     */
    id: string;
    /**
     * kind name
     */
    name: string;
}

export interface LineLength {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineMaxTemperature {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineMaximumAllowedCurrent {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineMaximumAllowedPower {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineMaximumAllowedTemperature {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineMaximumAllowedTemperatureLte {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineMaximumAllowedTemperatureSte {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineNumberOfConductors {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineReactance {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineReactivePower {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineReferenceResistance {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineResistance {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineSafetyMarginForPower {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineSusceptance {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineTag {
    /**
     * tag id
     */
    id: string;
    /**
     * tag name
     */
    name: string;
}

export interface LineTemperatureCoeffResistance {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface LineVoltageR {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineVoltageSt {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface LineVoltageTr {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface SegmentAltitude {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface SegmentAzimuth {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface SegmentCumulativeDistance {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
    /**
     * metadata value
     */
    value: string;
}

export interface SegmentKind {
    /**
     * kind id
     */
    id: string;
    /**
     * kind name
     */
    name: string;
}

export interface SegmentTag {
    /**
     * tag id
     */
    id: string;
    /**
     * tag name
     */
    name: string;
}

export interface SegmentTemperature {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface SegmentWindDirection {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

export interface SegmentWindSpeed {
    /**
     * reference to the asset to be linked to
     */
    asset: string;
    /**
     * id of the resource
     */
    id: string;
    /**
     * name of the resource
     */
    name: string;
    /**
     * [String|Boolean|Number] type of the data to be ingested in this attribute
     */
    type: string;
    /**
     * unit of measure
     */
    unit: string;
}

