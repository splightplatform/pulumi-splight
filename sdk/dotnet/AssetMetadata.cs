// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Splight.Splight
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Splight = Splight.Splight;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myAsset = new Splight.Asset("myAsset", new()
    ///     {
    ///         Description = "My Asset Description",
    ///         Geometry = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["type"] = "GeometryCollection",
    ///             ["geometries"] = new[]
    ///             {
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["type"] = "Point",
    ///                     ["coordinates"] = new[]
    ///                     {
    ///                         0,
    ///                         0,
    ///                     },
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    ///     var myAssetMetadata = new Splight.AssetMetadata("myAssetMetadata", new()
    ///     {
    ///         Type = "Number",
    ///         Unit = "meters",
    ///         Value = JsonSerializer.Serialize(10),
    ///         Asset = myAsset.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import splight:index/assetMetadata:AssetMetadata [options] splight_asset_metadata.&lt;name&gt; &lt;asset_metadata_id&gt;
    /// ```
    /// </summary>
    [SplightResourceType("splight:index/assetMetadata:AssetMetadata")]
    public partial class AssetMetadata : global::Pulumi.CustomResource
    {
        /// <summary>
        /// reference to the asset to be linked to
        /// </summary>
        [Output("asset")]
        public Output<string> Asset { get; private set; } = null!;

        /// <summary>
        /// name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// [String|Boolean|Number] type of the data to be ingested in this attribute
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// optional reference to the unit of the measure
        /// </summary>
        [Output("unit")]
        public Output<string?> Unit { get; private set; } = null!;

        /// <summary>
        /// metadata value
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a AssetMetadata resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AssetMetadata(string name, AssetMetadataArgs args, CustomResourceOptions? options = null)
            : base("splight:index/assetMetadata:AssetMetadata", name, args ?? new AssetMetadataArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AssetMetadata(string name, Input<string> id, AssetMetadataState? state = null, CustomResourceOptions? options = null)
            : base("splight:index/assetMetadata:AssetMetadata", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/splightplatform",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AssetMetadata resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AssetMetadata Get(string name, Input<string> id, AssetMetadataState? state = null, CustomResourceOptions? options = null)
        {
            return new AssetMetadata(name, id, state, options);
        }
    }

    public sealed class AssetMetadataArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// reference to the asset to be linked to
        /// </summary>
        [Input("asset", required: true)]
        public Input<string> Asset { get; set; } = null!;

        /// <summary>
        /// name of the resource
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// [String|Boolean|Number] type of the data to be ingested in this attribute
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// optional reference to the unit of the measure
        /// </summary>
        [Input("unit")]
        public Input<string>? Unit { get; set; }

        /// <summary>
        /// metadata value
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public AssetMetadataArgs()
        {
        }
        public static new AssetMetadataArgs Empty => new AssetMetadataArgs();
    }

    public sealed class AssetMetadataState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// reference to the asset to be linked to
        /// </summary>
        [Input("asset")]
        public Input<string>? Asset { get; set; }

        /// <summary>
        /// name of the resource
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// [String|Boolean|Number] type of the data to be ingested in this attribute
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// optional reference to the unit of the measure
        /// </summary>
        [Input("unit")]
        public Input<string>? Unit { get; set; }

        /// <summary>
        /// metadata value
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public AssetMetadataState()
        {
        }
        public static new AssetMetadataState Empty => new AssetMetadataState();
    }
}
