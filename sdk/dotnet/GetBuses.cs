// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Splight.Splight
{
    public static class GetBuses
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Splight = Pulumi.Splight;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var buses = Splight.GetBuses.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBusesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBusesResult>("splight:index/getBuses:getBuses", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Splight = Pulumi.Splight;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var buses = Splight.GetBuses.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBusesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBusesResult>("splight:index/getBuses:getBuses", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetBusesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetBusesTagResult> Tags;

        [OutputConstructor]
        private GetBusesResult(
            string id,

            ImmutableArray<Outputs.GetBusesTagResult> tags)
        {
            Id = id;
            Tags = tags;
        }
    }
}
