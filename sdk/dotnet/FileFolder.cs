// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Splight.Splight
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Splight = Splight.Splight;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myFileParentFolder = new Splight.FileFolder("myFileParentFolder");
    /// 
    ///     var myFileFolder = new Splight.FileFolder("myFileFolder", new()
    ///     {
    ///         Parent = myFileParentFolder.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import splight:index/fileFolder:FileFolder [options] splight_file_folder.&lt;name&gt; &lt;file_folder_id&gt;
    /// ```
    /// </summary>
    [SplightResourceType("splight:index/fileFolder:FileFolder")]
    public partial class FileFolder : global::Pulumi.CustomResource
    {
        /// <summary>
        /// folder name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// optional folder id where to place this folder
        /// </summary>
        [Output("parent")]
        public Output<string?> Parent { get; private set; } = null!;


        /// <summary>
        /// Create a FileFolder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FileFolder(string name, FileFolderArgs? args = null, CustomResourceOptions? options = null)
            : base("splight:index/fileFolder:FileFolder", name, args ?? new FileFolderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FileFolder(string name, Input<string> id, FileFolderState? state = null, CustomResourceOptions? options = null)
            : base("splight:index/fileFolder:FileFolder", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/splightplatform",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FileFolder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FileFolder Get(string name, Input<string> id, FileFolderState? state = null, CustomResourceOptions? options = null)
        {
            return new FileFolder(name, id, state, options);
        }
    }

    public sealed class FileFolderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// folder name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// optional folder id where to place this folder
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        public FileFolderArgs()
        {
        }
        public static new FileFolderArgs Empty => new FileFolderArgs();
    }

    public sealed class FileFolderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// folder name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// optional folder id where to place this folder
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        public FileFolderState()
        {
        }
        public static new FileFolderState Empty => new FileFolderState();
    }
}
