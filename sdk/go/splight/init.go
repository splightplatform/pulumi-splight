// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package splight

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/splightplatform/pulumi-splight/sdk/go/splight/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "splight:index/action:Action":
		r = &Action{}
	case "splight:index/alert:Alert":
		r = &Alert{}
	case "splight:index/algorithm:Algorithm":
		r = &Algorithm{}
	case "splight:index/asset:Asset":
		r = &Asset{}
	case "splight:index/assetAttribute:AssetAttribute":
		r = &AssetAttribute{}
	case "splight:index/assetMetadata:AssetMetadata":
		r = &AssetMetadata{}
	case "splight:index/assetRelation:AssetRelation":
		r = &AssetRelation{}
	case "splight:index/bus:Bus":
		r = &Bus{}
	case "splight:index/command:Command":
		r = &Command{}
	case "splight:index/component:Component":
		r = &Component{}
	case "splight:index/componentRoutine:ComponentRoutine":
		r = &ComponentRoutine{}
	case "splight:index/connector:Connector":
		r = &Connector{}
	case "splight:index/dashboard:Dashboard":
		r = &Dashboard{}
	case "splight:index/dashboardActionlistChart:DashboardActionlistChart":
		r = &DashboardActionlistChart{}
	case "splight:index/dashboardAlerteventsChart:DashboardAlerteventsChart":
		r = &DashboardAlerteventsChart{}
	case "splight:index/dashboardAlertlistChart:DashboardAlertlistChart":
		r = &DashboardAlertlistChart{}
	case "splight:index/dashboardAssetlistChart:DashboardAssetlistChart":
		r = &DashboardAssetlistChart{}
	case "splight:index/dashboardBarChart:DashboardBarChart":
		r = &DashboardBarChart{}
	case "splight:index/dashboardBargaugeChart:DashboardBargaugeChart":
		r = &DashboardBargaugeChart{}
	case "splight:index/dashboardCommandlistChart:DashboardCommandlistChart":
		r = &DashboardCommandlistChart{}
	case "splight:index/dashboardGaugeChart:DashboardGaugeChart":
		r = &DashboardGaugeChart{}
	case "splight:index/dashboardHistogramChart:DashboardHistogramChart":
		r = &DashboardHistogramChart{}
	case "splight:index/dashboardImageChart:DashboardImageChart":
		r = &DashboardImageChart{}
	case "splight:index/dashboardStatChart:DashboardStatChart":
		r = &DashboardStatChart{}
	case "splight:index/dashboardTab:DashboardTab":
		r = &DashboardTab{}
	case "splight:index/dashboardTableChart:DashboardTableChart":
		r = &DashboardTableChart{}
	case "splight:index/dashboardTextChart:DashboardTextChart":
		r = &DashboardTextChart{}
	case "splight:index/dashboardTimeseriesChart:DashboardTimeseriesChart":
		r = &DashboardTimeseriesChart{}
	case "splight:index/externalGrid:ExternalGrid":
		r = &ExternalGrid{}
	case "splight:index/file:File":
		r = &File{}
	case "splight:index/fileFolder:FileFolder":
		r = &FileFolder{}
	case "splight:index/function:Function":
		r = &Function{}
	case "splight:index/generator:Generator":
		r = &Generator{}
	case "splight:index/grid:Grid":
		r = &Grid{}
	case "splight:index/inverter:Inverter":
		r = &Inverter{}
	case "splight:index/line:Line":
		r = &Line{}
	case "splight:index/node:Node":
		r = &Node{}
	case "splight:index/secret:Secret":
		r = &Secret{}
	case "splight:index/segment:Segment":
		r = &Segment{}
	case "splight:index/server:Server":
		r = &Server{}
	case "splight:index/slackGenerator:SlackGenerator":
		r = &SlackGenerator{}
	case "splight:index/slackLine:SlackLine":
		r = &SlackLine{}
	case "splight:index/tag:Tag":
		r = &Tag{}
	case "splight:index/transformer:Transformer":
		r = &Transformer{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:splight" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"splight",
		"index/action",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/alert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/algorithm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/asset",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/assetAttribute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/assetMetadata",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/assetRelation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/bus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/command",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/component",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/componentRoutine",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/connector",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardActionlistChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardAlerteventsChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardAlertlistChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardAssetlistChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardBarChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardBargaugeChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardCommandlistChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardGaugeChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardHistogramChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardImageChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardStatChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardTab",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardTableChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardTextChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/dashboardTimeseriesChart",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/externalGrid",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/file",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/fileFolder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/function",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/generator",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/grid",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/inverter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/line",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/node",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/secret",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/segment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/server",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/slackGenerator",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/slackLine",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/tag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"splight",
		"index/transformer",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"splight",
		&pkg{version},
	)
}
